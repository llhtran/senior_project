{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;\red230\green255\blue79;}
\deftab720
\pard\pardeftab720

\f0\b\fs28 \cf0 Research\
\pard\pardeftab720

\b0\fs24 \cf0 \
The senior project consists of two distinct parts. \
\
Learning basic technologies\
MNIST tutorial in Python\
Tutorial in Theano?\
spaCy\
\
\
\pard\pardeftab720

\b \cf0 Representing features
\b0 \
One challenging aspect of natural language processing is choosing a good way to quantify language numerically. This necessity arises from the fact that learning models deal exclusively with numerical vectors and matrices in order to \'93learn\'94 features. Language and style, on the other hand, is completely devoid of numbers. \
\

\b Data collection and preprocessing
\b0 \
One of machine learning\'92s greatest bottlenecks is data availability. Machine learning methods are only applicable to problems that 1) have patterns that are difficult to detect and quantify and 2) have ample amounts of meaningful data. This is especially true for supervised learning: a pattern cannot to learned and classified without at least thousands of examples of data points and 
\i their correct evaluation
\i0 . \
\
Fortunately, there are a large number of literary works in the English language that is available to the public for free online. The project specifically utilizes novels by various authors obtained from Project Gutenberg, personal collections and other legal resources. [\cf0 \cb2 INSERT AUTHORS\cf0 \cb1 ] That said, the collected data is in every way unsuited for any kind of learning. Machine learning models take purely numerical data in the form of vectors and matrices. Therefore, a significant amount of pre-processing was required to turn literary texts into workable data. \
\
\

\b Authors used
\b0 \
Jane Austen\
Charles Dickens\
Mark Twain\
\

\b Pre-processing
\b0 \
Texts first had to be trimmed to contain only text\'97no titles, Gutenberg notes, excess space, etc\'85In other words, entities that were not characteristic of writing style. The Gutenberg texts originally came in UTF-8 format, which required filtering to ASCII in order to facilitate pre-processing with Python. All non-alphabetical, numerical and punctuation characters were removed. The text is then reverted to UTF-8 in order to feed into a commercial Python natural language processing package called spaCy. \
\
The texts considered came in two categories: prose and plays. Prose underwent an number of filters to eliminate particular formatting, such as underscores for emphasis, multiple newlines, excess white spaces, volume and chapter demarcations, illustration footnotes. Plays underwent the same procedure, with an added layer of complication: Names of characters in the text which signified the speaker had to be removed. Unlike the rest of the content, which included lines and scene descriptions, these names did not contribute to the writing style, and came in such prolific numbers that they were highly likely to interfere with style-related information. \
\
In addition,  
\b How to deal with Shakespeare\'92s plays e.g. [Exuent.]
\b0 ?\
\
Note\
The project utilizes Project Gutenberg\'92s texts from exclusively English-speaking authors to avoid unquantifiable variations in style due to translation by different translators. }